-------------------------------SYSTEM -------------------------------------------------
-------------------------------TABLESPACES---------------------------------------------
CREATE TABLESPACE hospital DATAFILE 'C:/Direccion/hospital01.dbf' SIZE 2M DEFAULT STORAGE (INITIAL 1M NEXT 1M PCTINCREASE 0);

-------------------------------USUARIOS ---------------------------------------------
CREATE USER ADMINISTRADOR IDENTIFIED BY 123 DEFAULT TABLESPACE hospital TEMPORARY TABLESPACE TEMP;
CREATE USER DOCTOR IDENTIFIED BY 123 DEFAULT TABLESPACE hospital TEMPORARY TABLESPACE TEMP;
CREATE USER SECRETARIA IDENTIFIED BY 123 DEFAULT TABLESPACE hospital TEMPORARY TABLESPACE TEMP;

GRANT CONNECT TO ADMINISTRADOR, DOCTOR, SECRETARIA;
GRANT RESOURCE TO ADMINISTRADOR, DOCTOR, SECRETARIA;

ALTER USER ADMINISTRADOR QUOTA UNLIMITED ON hospital;
ALTER USER DOCTOR QUOTA UNLIMITED ON hospital;
ALTER USER SECRETARIA QUOTA UNLIMITED ON hospital;

-------------------------------ROLES---------------------------------------------
CREATE ROLE ROL_ADMNISTRADOR
CREATE ROLE ROL_DOCTOR
CREATE ROLE ROL_SECRETARIA

GRANT ROL_ADMNISTRADOR TO ADMINISTRADOR;
GRANT ROL_DOCTOR TO DOCTOR;
GRANT ROL_SECRETARIA TO SECRETARIA;

----PERMISO UNICAMENTE DE SELECT
GRANT SELECT ON TAB_Paciente, TAB_Citas TO ROL_SECRETARIA;


-------------------------------PERFILES---------------------------------------------
----PROFILE ADMINISTRADOR
CREATE PROFILE PERFIL_ADMINISTRADOR LIMIT
SESSIONS_PER_USER UNLIMITED
CPU_PER_SESSION UNLIMITED
CPU_PER_CALL 3000
CONNECT_TIME 45
LOGICAL_READS_PER_SESSION DEFAULT
LOGICAL_READS_PER_CALL 1000
PRIVATE_SGA 15K
COMPOSITE_LIMIT 5000000;

alter user ADMINISTRADOR profile PERFIL_ADMINISTRADOR;

----PROFILE DOCTOR
CREATE PROFILE PERFIL_DOCTOR LIMIT
SESSIONS_PER_USER UNLIMITED
CPU_PER_SESSION UNLIMITED
CPU_PER_CALL 3000
CONNECT_TIME 45
LOGICAL_READS_PER_SESSION DEFAULT
LOGICAL_READS_PER_CALL 1000
PRIVATE_SGA 15K
COMPOSITE_LIMIT 5000000;

alter user DOCTOR profile PERFIL_DOCTOR;

----PROFILE SECRETARIA
CREATE PROFILE PERFIL_SECRETARIA LIMIT
SESSIONS_PER_USER UNLIMITED
CPU_PER_SESSION UNLIMITED
CPU_PER_CALL 3000
CONNECT_TIME 45
LOGICAL_READS_PER_SESSION DEFAULT
LOGICAL_READS_PER_CALL 1000
PRIVATE_SGA 15K
COMPOSITE_LIMIT 5000000;

alter user SECRETARIA profile PERFIL_SECRETARIA;

-------------------------------ADMINISTRADOR---------------------------------------------
-----------------------------------------------------------------------------------------
------ CREACION DE TABLAS -------
---TABLAS DE DIRECCIONES, PROVINCIAS, CANTONES Y DISTRITOS---

--ADMINISTRADOR
    CREATE TABLE TAB_Administrador(
    ID_Administrador NUMBER(5) NOT NULL,
    Nombre VARCHAR2(20),
    Apellido_Paterno VARCHAR2(20),
    Apellido_Materno VARCHAR2(20),
    Telefono VARCHAR2(20),
    CONSTRAINT PK_ID_ID_Administrador PRIMARY KEY (ID_Administrador));

--CONSULTORIO
CREATE TABLE TAB_Consultorio(
    ID_Consultorio NUMBER(5) NOT NULL,
    ID_Administrador NUMBER(5) NOT NULL,
    Nombre_Consultorio VARCHAR2(50),
    Dirrecion_Consultorio VARCHAR2(250),
    Telefono VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_ID_Consultorio PRIMARY KEY (ID_Consultorio),
    FOREIGN KEY (ID_Administrador) REFERENCES TAB_Administrador(ID_Administrador));
    
    
--TABLAS DE DIRECCIONES, PROVINCIAS, CANTONES Y DISTRITOS---    
CREATE TABLE TAB_Provincia(
	ID_Provincia NUMBER(1) NOT NULL,
	Provincia VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_ID_Provincia PRIMARY KEY (ID_Provincia));
 
CREATE TABLE TAB_Canton(
	ID_Canton NUMBER(3) NOT NULL,
	Canton VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_ID_Canton PRIMARY KEY (ID_Canton));
    
 
CREATE TABLE TAB_Distrito(
    ID_Distrito NUMBER(3) NOT NULL,
    Distrito VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_ID_Distrito PRIMARY KEY (ID_Distrito));
    
    
CREATE TABLE TAB_Direccion_Paciente(
	ID_Direccion_Paciente NUMBER(5) NOT NULL,
	ID_Provincia NUMBER(1) NOT NULL,
	ID_Canton NUMBER(3) NOT NULL,
	ID_Distrito NUMBER(3) NOT NULL,
	Especificaciones VARCHAR(250) NOT NULL,
    CONSTRAINT PK_ID_Direccion_Paciente PRIMARY KEY (ID_Direccion_Paciente),
	FOREIGN KEY (ID_PROVINCIA) REFERENCES TAB_PROVINCIA(ID_PROVINCIA),
    FOREIGN KEY (ID_CANTON) REFERENCES TAB_CANTON(ID_CANTON),
    FOREIGN KEY (ID_DISTRITO) REFERENCES TAB_DISTRITO(ID_DISTRITO));
    
---ESTADO 
CREATE TABLE TAB_Estado(
    ID_Estado NUMBER(1),
    Gravedad VARCHAR2(1),
    CONSTRAINT PK_ID_Estado PRIMARY KEY (ID_Estado));
 
---AREA
    CREATE TABLE TAB_AREA(
    ID_Area NUMBER(5),
    Nombre_Area VARCHAR2(50),
    CONSTRAINT PK_Area PRIMARY KEY (ID_Area));
--SECRETARIA
CREATE TABLE TAB_SECRETARIA(
    ID_Secretaria NUMBER(5) NOT NULL,
    Telefono VARCHAR2(50),
    Nombre VARCHAR2(50),
    Apellido_Paterno VARCHAR2(50),
    Apellido_Materno VARCHAR2(50),
    ID_Area NUMBER(5) NOT NULL,
    CONSTRAINT PK_ID_Secretaria PRIMARY KEY (ID_Secretaria),
    FOREIGN KEY (ID_Area) REFERENCES TAB_AREA(ID_Area)); 

  
--DOCTOR
    CREATE TABLE TAB_DOCTOR(
    ID_Doctor NUMBER(5) NOT NULL,
    Nombre VARCHAR2(50),
    Apellido_Paterno VARCHAR2(50),
    Apellido_Materno VARCHAR2(50),
    ID_Area NUMBER(5),
    Telefono VARCHAR2(50),
    CONSTRAINT PK_ID_Doctor PRIMARY KEY (ID_Doctor),
    FOREIGN KEY (ID_Area) REFERENCES Tab_Area(ID_Area));    
    
---PRDOUCTO
    CREATE TABLE TAB_Productos(
    ID_Producto NUMBER(5) NOT NULL,
    Nombre_Producto VARCHAR2(50),
    Cantidad_Producto NUMBER(12),
    Categoria_Producto VARCHAR2(20),
    ID_Area NUMBER(5) NOT NULL,
    CONSTRAINT PK_ID_Producto PRIMARY KEY (ID_Producto),
    FOREIGN KEY (ID_Area) REFERENCES TAB_AREA(ID_Area)); 
    
    
---Paciente
CREATE TABLE TAB_Paciente(
    ID_Paciente NUMBER(5) NOT NULL,
    ID_Estado NUMBER(1) NOT NULL,
    ID_Direccion Number(5) NOT NULL,
    Nombre VARCHAR2(50),
    Apellido_Paterno VARCHAR2(50),
    Apellido_Materno VARCHAR2(50),
    Telefono VARCHAR2(50),
    Email VARCHAR2(50),
    CONSTRAINT PK_ID_Paciente PRIMARY KEY (ID_Paciente),
    FOREIGN KEY (ID_Estado) REFERENCES Tab_Estado(ID_Estado),
	FOREIGN KEY (ID_Direccion) REFERENCES TAB_Direccion_Paciente(ID_Direccion_Paciente));


--CITAS
CREATE TABLE TAB_Citas(
    ID_Citas NUMBER(5) NOT NULL,
    ID_Doctor NUMBER(5) NOT NULL,
    Fecha DATE,
    ID_Consultorio NUMBER(5) NOT NULL,
    ID_Paciente NUMBER(5) NOT NULL,
    CONSTRAINT PK_ID_Citas PRIMARY KEY (ID_Citas),
    FOREIGN KEY (ID_Doctor) REFERENCES TAB_DOCTOR(ID_Doctor),
	FOREIGN KEY (ID_Consultorio) REFERENCES TAB_Consultorio(ID_Consultorio),
	FOREIGN KEY (ID_Paciente) REFERENCES TAB_Paciente(ID_Paciente));

-------------------------------AUDITORIA---------------------------------------------
--Checkeamos si podemos auditar--
select * from v$parameter where name = 'audit_trail';
--En caso de que no, corremos el siguiente comando:
alter system set audit_trail='DB' scope =spfile;

--Activacion de sentencias para usuario Administrador
AUDIT INSERT TABLE, UPDATE TABLE BY ADMINISTRADOR BY ACCESS;

GRANT DBA TO ADMINISTRADOR;
AUDIT CONNECT;
AUDIT CREATE USER BY ADMINISTRADOR BY ACCESS;

select substr(username,1,10),substr(action_name,1,20)
from DBA_AUDIT_OBJECT;

select username,to_char(timestamp,'DD-MM-YYYY:HH24:MI:SS'), action_name
from dba_audit_object
where username = 'ADMINISTRADOR' AND
ACTION_NAME = 'UPDATE' AND 
to_date(TIMESTAMP,'DD-MM-YYYY') = to_date(sysdate, 'DD-MM-YYYY')
ORDER BY to_char(timestamp,'DD-MM-YYYY:HH24:MI:SS');


SELECT * FROM DBA_AUDIT_OBJECT;

SELECT  SUBSTR(USERNAME,1,10),
        SUBSTR(TERMINAL,1,10),
        SUBSTR(TIMESTAMP,1,10),
        SUBSTR(OBJ_NAME,1,10),
        SUBSTR(ACTION_NAME,1,20) ACCION
FROM DBA_AUDIT_TRAIL
WHERE OWNER = 'ADMINISTRADOR' AND
to_date(TIMESTAMP,'DD-MM-YYYY') = to_date(sysdate, 'DD-MM-YYYY') AND
ACTION_NAME = 'UPDATE';

SELECT  SUBSTR(USER_NAME,1,10),
        SUBSTR(PRIVILEGE,1,10),
        SUBSTR(SUCCESS,1,10),
        SUBSTR(FAILURE,1,10)
FROM DBA_PRIV_AUDIT_OPTS;

DESC DBA_PRIV_AUDIT_OPTS;
GRANT CREATE TABLE TO ADMINISTRADOR;